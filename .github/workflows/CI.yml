name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run Backend Tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage.out
          retention-days: 1

  lint:
    name: lint
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '^1.24'
          check-latest: true
          cache: true
          go-version-file: 'go.mod'
          cache-dependency-path: |
            go.sum

      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        continue-on-error: true
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-analysis:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download backend test coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: ./
        continue-on-error: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build:
    name: Docker Build
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: false
          load: true
          tags: telemetry-forwarder:${{ github.sha }}

      - name: Cleanup
        if: always()
        run: docker image rm telemetry-forwarder:${{ github.sha }}

  release:
    name: Test Release
    needs:
      - docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.24'

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create temporary tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a v${{ github.run_number }}.0.0 -m "Test tag for GoReleaser"

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --skip=publish --clean --fail-fast --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}